#!/usr/bin/env ruby

require 'pathname'
$baseDir = Pathname.new(File.dirname(__FILE__) + '/..').realpath

require "#{$baseDir}/lib/uberblog"
require 'data_mapper'
require 'sinatra'
require "sinatra/json"
require 'json'

DataMapper::Logger.new($stdout, :debug)
DataMapper.setup(:default, "sqlite://#{$baseDir}/data/database.sqlite")
DataMapper::Model.raise_on_save_failure = true
require 'uberblog/model'
DataMapper.finalize

not_found do
  "Go away!\n"
end

get '/' do
  "/rating\n"
end

get '/rating' do
  redirect '/rating/', 303
end

get '/rating/' do
  uris = ''
  Uberblog::Model::Rating.all.each { |rating| uris << "/rating/#{rating.post}\n" }
  uris
end

get '/rating/:post' do
  rating = Uberblog::Model::Rating.get(params[:post])
  halt 404 if rating.nil?
  json :post => rating.post, :sum => rating.sum, :count => rating.count, :average => rating.average
end

put '/rating/:post' do
  data   = JSON.parse(request.body.read)
  rating = Uberblog::Model::Rating.first_or_create({ :post => params[:post] })
  rating.attributes = {
    :sum   => rating.sum + data['rate'].to_i,
    :count => rating.count + 1
  }
  rating.save
  redirect "/rating/#{params[:post]}", 303
end